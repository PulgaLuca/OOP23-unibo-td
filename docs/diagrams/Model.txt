classDiagram

     namespace Common{
        class Position2D {
            +getX() int
            +getY() int
        }

        class Vector2D {
            +getX() int
            +getY() int
        }
    }

    class GameState {
        INITIALIZED
        RUNNING
        PAUSED
        GAME_OVER
    }

    class Player {
        +getMaxLives() int
        +getRemainingLives() int
        +loseLives(int) void
        +restoreLives(int) void
        +getMoney(void) int
    }

    class GameEngine {
        +getGameMap() GameMap
        +togglePause() boolean
        +toggleSpeed() double
        +getCurrentRound() int
        +getPlayer() Player
        +getGameState() GameState
        +getEntityManager() EntityManager
        +getStats()
    }

    class RoundHistory{
        lives()
        killedEnemies()
        money()
    }

    class GameMap {
        +getTile(Position2D) Tile
        +getBuildableTiles()
        +getSpawnPosition() Position2D
        +getDirection(Position2D) Vector2D
    }

    class Tile {
        +getPosition() Position2D
    }

    class BuildableTile {
        +canBuild() boolean
        +build(*) void
        +destroy() void
    }

    class Entity{
        getId() int
        getName() String
        getPosition() Position2D
        getDirection() Vector2D
        render() String
    }

    class DefenseEntity{
        getCost() int
        getType() 
    }

    class Tower{
        getLevel() int
        getRange() float
        setTargetMethod() void
    }

    class Weapon{
        getFrequency() int
    }

    class Enemy{
        getLP() int
        getReward() int
        inflictDamage()
        isAlive() boolean
    }
    
    class Bullet{
        getDamage() int
        getSpeed() int
    }

    class EntityManager{
        buildEntity(Entity) void
        getEnemies() 
        getTowers()
        getNearestEnemy(Position2D, radius) Enemy 
    }

    class EnemyState{
        MOVING
        DEAD
        FINISHED
    }

    <<Enumeration>> GameState
    <<Enumeration>> Vector2D
    <<Interface>> Player
    <<Interface>> GameEngine
    <<Interface>> GameMap
    <<Interface>> Tile
    <<Interface>> BuildableTile
    <<Interface>> Position2D
    <<Interface>> Tower
    <<Interface>> Weapon
    <<Interface>> Entity
    <<Interface>> DefenseEntity
    <<Interface>> Enemy
    <<Interface>> EntityManager
    <<Interface>> Bullet
    <<Interface>> RoundHistory
    <<Enumeration>> EnemyState

    GameEngine -- RoundHistory
    GameEngine <-- GameState
    GameEngine <-- EntityManager
    Entity -- Enemy
    Entity -- DefenseEntity
    DefenseEntity -- Weapon
    DefenseEntity -- Tower
    EntityManager -- Entity
    GameEngine -- Player
    GameEngine -- GameMap
    Tile <|-- BuildableTile
    GameMap -- Tile
    Entity -- Bullet
    Enemy <-- EnemyState